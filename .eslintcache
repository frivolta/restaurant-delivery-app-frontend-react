[{"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\index.tsx":"1","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\apollo.ts":"3","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\routers\\logged-out-router.tsx":"4","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\routers\\logged-in-router.tsx":"5","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\login.tsx":"6","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\create-account.tsx":"7","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\components\\form-error.tsx":"8","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\components\\button.tsx":"9","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\constants.ts":"10","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\client\\restaurants.tsx":"11","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\404.tsx":"12","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\components\\header.tsx":"13","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\hooks\\useMe.tsx":"14","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\user\\confirm-email.tsx":"15","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\user\\edit-profile.tsx":"16","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\components\\restaurant.tsx":"17","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\client\\search.tsx":"18","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\fragments.ts":"19","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\client\\category.tsx":"20","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\client\\restaurant.tsx":"21","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\components\\app.tsx":"22","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\owner\\my-restaurants.tsx":"23","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\__generated__\\globalTypes.ts":"24","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\owner\\add-restaurant.tsx":"25","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\owner\\my-restaurant.tsx":"26","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\components\\dish.tsx":"27","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\owner\\add-dish.tsx":"28","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\components\\dish-option.tsx":"29"},{"size":798,"mtime":1608848827872,"results":"30","hashOfConfig":"31"},{"size":425,"mtime":1608138579927,"results":"32","hashOfConfig":"31"},{"size":1018,"mtime":1608590089774,"results":"33","hashOfConfig":"31"},{"size":588,"mtime":1608595500082,"results":"34","hashOfConfig":"31"},{"size":2802,"mtime":1609353861748,"results":"35","hashOfConfig":"31"},{"size":3957,"mtime":1609064674101,"results":"36","hashOfConfig":"31"},{"size":4537,"mtime":1609174940949,"results":"37","hashOfConfig":"31"},{"size":231,"mtime":1608414922768,"results":"38","hashOfConfig":"31"},{"size":528,"mtime":1608430185113,"results":"39","hashOfConfig":"31"},{"size":46,"mtime":1608588971035,"results":"40","hashOfConfig":"31"},{"size":4075,"mtime":1608691995810,"results":"41","hashOfConfig":"31"},{"size":608,"mtime":1608595444115,"results":"42","hashOfConfig":"31"},{"size":1072,"mtime":1609353743213,"results":"43","hashOfConfig":"31"},{"size":305,"mtime":1608850334508,"results":"44","hashOfConfig":"31"},{"size":1799,"mtime":1609353743260,"results":"45","hashOfConfig":"31"},{"size":2950,"mtime":1608647979846,"results":"46","hashOfConfig":"31"},{"size":702,"mtime":1608691995810,"results":"47","hashOfConfig":"31"},{"size":2879,"mtime":1608806348486,"results":"48","hashOfConfig":"31"},{"size":967,"mtime":1608691995751,"results":"49","hashOfConfig":"31"},{"size":2686,"mtime":1608806629290,"results":"50","hashOfConfig":"31"},{"size":7114,"mtime":1609372524726,"results":"51","hashOfConfig":"31"},{"size":374,"mtime":1608848798287,"results":"52","hashOfConfig":"31"},{"size":1973,"mtime":1609288689748,"results":"53","hashOfConfig":"31"},{"size":2242,"mtime":1609372482142,"results":"54","hashOfConfig":"31"},{"size":4528,"mtime":1609371189503,"results":"55","hashOfConfig":"31"},{"size":6273,"mtime":1609371317270,"results":"56","hashOfConfig":"31"},{"size":1973,"mtime":1609353442337,"results":"57","hashOfConfig":"31"},{"size":4767,"mtime":1609353792344,"results":"58","hashOfConfig":"31"},{"size":905,"mtime":1609353476720,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"4kbgns",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\index.tsx",[],["124","125"],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\apollo.ts",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\routers\\logged-out-router.tsx",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\routers\\logged-in-router.tsx",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\login.tsx",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\create-account.tsx",["126","127"],"import { ApolloError, gql, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport deliveryAppLogo from \"../images/logo.svg\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../components/button\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { CreateAccountInput, UserRole } from \"../__generated__/globalTypes\";\r\nimport {\r\n  CreateAccountMutation,\r\n  CreateAccountMutationVariables,\r\n} from \"../__generated__/CreateAccountMutation\";\r\n\r\ninterface ICreateAccountForm {\r\n  email: string;\r\n  password: string;\r\n  role: UserRole;\r\n}\r\n\r\nexport const CREATE_ACCOUNT_MUTATION = gql`\r\n  mutation CreateAccountMutation($createAccountInput: CreateAccountInput!) {\r\n    createAccount(input: $createAccountInput) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CreateAccount = () => {\r\n  const history = useHistory();\r\n  const {\r\n    register,\r\n    getValues,\r\n    errors,\r\n    handleSubmit,\r\n    formState,\r\n  } = useForm<ICreateAccountForm>({\r\n    mode: \"onChange\",\r\n    defaultValues: { role: UserRole.Client },\r\n  });\r\n\r\n  const onError = (error: ApolloError) => {};\r\n\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password, role } = getValues();\r\n      if (email && password) {\r\n        createAccountMutation({\r\n          variables: { createAccountInput: { email, password, role } },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onCompleted = (data: CreateAccountMutation) => {\r\n    const {\r\n      createAccount: { ok, error },\r\n    } = data;\r\n    if (ok) {\r\n      alert(\"Account created login now\");\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  const [\r\n    createAccountMutation,\r\n    { loading, data: createAccountMutationResult },\r\n  ] = useMutation<CreateAccountMutation, CreateAccountMutationVariables>(\r\n    CREATE_ACCOUNT_MUTATION,\r\n    { onError, onCompleted }\r\n  );\r\n\r\n  return (\r\n    <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\r\n      <Helmet>\r\n        <title>Create Account | Delivery app</title>\r\n      </Helmet>\r\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\r\n        <img src={deliveryAppLogo} className=\"w-52 mb-10\" alt=\"Delivery app\" />\r\n        <h4 className=\"w-full font-medium text-left text-3xl mb-5\">\r\n          Lets's get started\r\n        </h4>\r\n        <form\r\n          className=\"grid gap-3 mt-5 w-full mb-5\"\r\n          onSubmit={handleSubmit(onSubmit)}\r\n        >\r\n          <input\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            name=\"email\"\r\n            required\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"input\"\r\n          />\r\n\r\n          {errors.email?.type === \"pattern\" && (\r\n            <FormError errorMessage={\"Please enter a valid email\"} />\r\n          )}\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email?.message} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"Password is required\" })}\r\n            required\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && (\r\n            <span className=\"font-medium text-red-500\">\r\n              <FormError errorMessage={errors.password?.message} />\r\n            </span>\r\n          )}\r\n          <select\r\n            name=\"role\"\r\n            ref={register({ required: true })}\r\n            className=\"input\"\r\n          >\r\n            {Object.keys(UserRole).map((role, index) => (\r\n              <option key={index}>{role}</option>\r\n            ))}\r\n          </select>\r\n          <Button\r\n            canClick={formState.isValid}\r\n            loading={loading}\r\n            actionText={\"Create Account\"}\r\n          />\r\n          {createAccountMutationResult?.createAccount.error && (\r\n            <FormError\r\n              errorMessage={createAccountMutationResult?.createAccount.error}\r\n            />\r\n          )}\r\n        </form>\r\n        <div>\r\n          Already have an account?{\" \"}\r\n          <Link to=\"/\" className=\"text-lime-600 hover:underline\">\r\n            Login now\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\components\\form-error.tsx",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\components\\button.tsx",["128"],"import React from \"react\";\r\n\r\ninterface IButtonProps {\r\n  canClick: boolean;\r\n  loading: boolean;\r\n  actionText: string;\r\n}\r\n\r\nexport const Button: React.FC<IButtonProps> = ({\r\n  canClick,\r\n  loading,\r\n  actionText,\r\n}) => (\r\n  <button\r\n    role=\"button\"\r\n    className={`text-lg font-medium focus:outline-none text-white py-4  transition-colors ${\r\n      canClick\r\n        ? \"bg-lime-600 hover:bg-lime-700\"\r\n        : \"bg-gray-300 pointer-events-none\"\r\n    }`}\r\n  >\r\n    {loading ? \"Loading...\" : actionText}\r\n  </button>\r\n);\r\n","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\constants.ts",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\client\\restaurants.tsx",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\404.tsx",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\components\\header.tsx",["129","130"],"import { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMe } from \"../hooks/useMe\";\r\nimport nuberLogo from \"../images/logo.svg\";\r\n\r\nexport const Header: React.FC = () => {\r\n  const { data, loading, error } = useMe();\r\n\r\n  return (\r\n    <>\r\n      {!data?.me.verified && (\r\n        <div className=\"bg-red-500 p-3 text-center text-base text-white\">\r\n          <span>Please verify your email.</span>\r\n        </div>\r\n      )}\r\n      <header className=\"py-4\">\r\n        <div className=\"w-full px-5 xl:px-0 max-w-screen-2xl mx-auto flex justify-between items-center\">\r\n          <Link to=\"/\">\r\n            <img src={nuberLogo} className=\"w-44\" alt=\"Delivery app\" />\r\n          </Link>\r\n          <span className=\"text-xs\">\r\n            <Link to=\"/edit-profile\">\r\n              <FontAwesomeIcon icon={faUser} className=\"text-3xl\" />\r\n            </Link>\r\n          </span>\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\hooks\\useMe.tsx",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\user\\confirm-email.tsx",["131","132","133","134"],"import { useApolloClient, useMutation } from \"@apollo/client\";\r\nimport { gql } from \"@apollo/client/core\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { useMe } from \"../../hooks/useMe\";\r\nimport { VerifyEmailInput } from \"../../__generated__/globalTypes\";\r\nimport {\r\n  verifyEmail,\r\n  verifyEmailVariables,\r\n} from \"../../__generated__/verifyEmail\";\r\n\r\nconst VERIFY_EMAIL_MUTATION = gql`\r\n  mutation verifyEmail($input: VerifyEmailInput!) {\r\n    verifyEmail(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\nexport const ConfirmEmail = () => {\r\n  const { data: userData } = useMe();\r\n\r\n  const onCompleted = (data: verifyEmail) => {\r\n    const {\r\n      verifyEmail: { ok },\r\n    } = data;\r\n    if (ok && userData?.me.id) {\r\n      client.writeFragment({\r\n        id: `User:${userData.me.id + \"\"}`,\r\n        fragment: gql`\r\n          fragment VerifiedUser on User {\r\n            verified\r\n          }\r\n        `,\r\n        data: { verified: true },\r\n      });\r\n    }\r\n  };\r\n\r\n  const [verifyEmail] = useMutation<verifyEmail, verifyEmailVariables>(\r\n    VERIFY_EMAIL_MUTATION,\r\n    { onCompleted }\r\n  );\r\n\r\n  const client = useApolloClient();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const [, code] = window.location.href.split(\"code=\");\r\n    verifyEmail({ variables: { input: { code } } });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mt-52 flex flex-col items-center justify-center\">\r\n      <Helmet>\r\n        <title>Verify Email | Nuber Eats</title>\r\n      </Helmet>\r\n      <h2 className=\"text-lg mb-1 font-medium\">Confirming email...</h2>\r\n      <h4 className=\"text-gray-700 text-sm\">\r\n        Please wait, don't close this page...\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\user\\edit-profile.tsx",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\components\\restaurant.tsx",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\client\\search.tsx",["135","136","137"],"import { gql, useLazyQuery } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { Restaurant } from \"../../components/restaurant\";\r\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport {\r\n  searchRestaurant,\r\n  searchRestaurantVariables,\r\n} from \"../../__generated__/searchRestaurant\";\r\n\r\nconst SEARCH_RESTAURANT = gql`\r\n  query searchRestaurant($input: SearchRestaurantInput!) {\r\n    searchRestaurant(input: $input) {\r\n      ok\r\n      error\r\n      totalPages\r\n      totalResults\r\n      restaurants {\r\n        ...RestaurantParts\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n`;\r\n\r\nexport const Search = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [page, setPage] = React.useState(1);\r\n  const [callQuery, { loading, data, called }] = useLazyQuery<\r\n    searchRestaurant,\r\n    searchRestaurantVariables\r\n  >(SEARCH_RESTAURANT);\r\n\r\n  React.useEffect(() => {\r\n    const [_, query] = location.search.split(\"?term=\");\r\n    if (!query) {\r\n      return history.replace(\"/\");\r\n    }\r\n    callQuery({\r\n      variables: {\r\n        input: {\r\n          page,\r\n          query,\r\n        },\r\n      },\r\n    });\r\n  }, [page]);\r\n\r\n  const onNextPageClick = () => setPage((current) => current + 1);\r\n  const onPrevPageClick = () => setPage((current) => current - 1);\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Search | Delivery app</title>\r\n      </Helmet>\r\n      {!loading && data?.searchRestaurant.restaurants && (\r\n        <div className=\"max-w-screen-2xl pb-20 mx-auto mt-8\">\r\n          <div className=\"grid mt-16 md:grid-cols-3 gap-x-5 gap-y-10\">\r\n            {data?.searchRestaurant?.restaurants?.map((restaurant) => (\r\n              <Restaurant\r\n                key={restaurant.id}\r\n                id={restaurant.id + \"\"}\r\n                coverImage={restaurant.coverImage}\r\n                name={restaurant.name}\r\n                categoryName={restaurant.category?.name}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"grid grid-cols-3 text-center max-w-md items-center mx-auto mt-10\">\r\n        {page > 1 ? (\r\n          <button\r\n            onClick={onPrevPageClick}\r\n            className=\"focus:outline-none font-medium text-2xl\"\r\n          >\r\n            &larr;\r\n          </button>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        <span>\r\n          Page {page} of {data?.searchRestaurant.totalPages}\r\n        </span>\r\n        {page !== data?.searchRestaurant.totalPages ? (\r\n          <button\r\n            onClick={onNextPageClick}\r\n            className=\"focus:outline-none font-medium text-2xl\"\r\n          >\r\n            &rarr;\r\n          </button>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\fragments.ts",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\client\\category.tsx",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\client\\restaurant.tsx",["138","139","140"],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\components\\app.tsx",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\owner\\my-restaurants.tsx",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\__generated__\\globalTypes.ts",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\owner\\add-restaurant.tsx",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\owner\\my-restaurant.tsx",["141","142"],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\components\\dish.tsx",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\owner\\add-dish.tsx",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\components\\dish-option.tsx",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":9,"column":10,"nodeType":"149","messageId":"150","endLine":9,"endColumn":28},{"ruleId":"147","severity":1,"message":"151","line":58,"column":28,"nodeType":"149","messageId":"150","endLine":58,"endColumn":33},{"ruleId":"152","severity":1,"message":"153","line":14,"column":3,"nodeType":"154","endLine":21,"endColumn":4},{"ruleId":"147","severity":1,"message":"155","line":9,"column":17,"nodeType":"149","messageId":"150","endLine":9,"endColumn":24},{"ruleId":"147","severity":1,"message":"151","line":9,"column":26,"nodeType":"149","messageId":"150","endLine":9,"endColumn":31},{"ruleId":"147","severity":1,"message":"156","line":5,"column":22,"nodeType":"149","messageId":"150","endLine":5,"endColumn":33},{"ruleId":"147","severity":1,"message":"157","line":7,"column":10,"nodeType":"149","messageId":"150","endLine":7,"endColumn":26},{"ruleId":"147","severity":1,"message":"158","line":47,"column":9,"nodeType":"149","messageId":"150","endLine":47,"endColumn":16},{"ruleId":"159","severity":1,"message":"160","line":52,"column":6,"nodeType":"161","endLine":52,"endColumn":8,"suggestions":"162"},{"ruleId":"147","severity":1,"message":"163","line":31,"column":38,"nodeType":"149","messageId":"150","endLine":31,"endColumn":44},{"ruleId":"147","severity":1,"message":"164","line":37,"column":12,"nodeType":"149","messageId":"150","endLine":37,"endColumn":13},{"ruleId":"159","severity":1,"message":"165","line":49,"column":6,"nodeType":"161","endLine":49,"endColumn":12,"suggestions":"166"},{"ruleId":"147","severity":1,"message":"155","line":51,"column":11,"nodeType":"149","messageId":"150","endLine":51,"endColumn":18},{"ruleId":"167","severity":1,"message":"168","line":90,"column":57,"nodeType":"169","messageId":"170","endLine":90,"endColumn":59},{"ruleId":"147","severity":1,"message":"171","line":141,"column":22,"nodeType":"149","messageId":"150","endLine":141,"endColumn":24},{"ruleId":"147","severity":1,"message":"155","line":92,"column":35,"nodeType":"149","messageId":"150","endLine":92,"endColumn":42},{"ruleId":"159","severity":1,"message":"172","line":128,"column":6,"nodeType":"161","endLine":128,"endColumn":24,"suggestions":"173"},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"@typescript-eslint/no-unused-vars","'CreateAccountInput' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","'loading' is assigned a value but never used.","'useLocation' is defined but never used.","'VerifyEmailInput' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'verifyEmail'. Either include it or remove the dependency array.","ArrayExpression",["176"],"'called' is assigned a value but never used.","'_' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'callQuery', 'history', and 'location.search'. Either include them or remove the dependency array.",["177"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ok' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["178"],"no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [verifyEmail]",{"range":"185","text":"186"},"Update the dependencies array to be: [callQuery, history, location.search, page]",{"range":"187","text":"188"},"Update the dependencies array to be: [history, subscriptionData]",{"range":"189","text":"190"},[1422,1424],"[verifyEmail]",[1270,1276],"[callQuery, history, location.search, page]",[3105,3123],"[history, subscriptionData]"]