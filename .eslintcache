[{"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\index.tsx":"1","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\apollo.ts":"3","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\routers\\logged-out-router.tsx":"4","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\routers\\logged-in-router.tsx":"5","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\login.tsx":"6","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\create-account.tsx":"7","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\components\\form-error.tsx":"8","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\components\\button.tsx":"9","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\constants.ts":"10","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\client\\restaurants.tsx":"11","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\404.tsx":"12","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\components\\header.tsx":"13","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\hooks\\useMe.tsx":"14","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\user\\confirm-email.tsx":"15","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\user\\edit-profile.tsx":"16","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\components\\restaurant.tsx":"17","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\client\\search.tsx":"18","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\fragments.ts":"19","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\__generated__\\globalTypes.ts":"20","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\client\\category.tsx":"21","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\client\\restaurant.tsx":"22","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\components\\app.tsx":"23"},{"size":798,"mtime":1608848827872,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":1608138579927,"results":"26","hashOfConfig":"25"},{"size":1018,"mtime":1608590089774,"results":"27","hashOfConfig":"25"},{"size":588,"mtime":1608595500082,"results":"28","hashOfConfig":"25"},{"size":1681,"mtime":1608807140190,"results":"29","hashOfConfig":"25"},{"size":3957,"mtime":1609064674101,"results":"30","hashOfConfig":"25"},{"size":4537,"mtime":1609174940949,"results":"31","hashOfConfig":"25"},{"size":231,"mtime":1608414922768,"results":"32","hashOfConfig":"25"},{"size":528,"mtime":1608430185113,"results":"33","hashOfConfig":"25"},{"size":46,"mtime":1608588971035,"results":"34","hashOfConfig":"25"},{"size":4075,"mtime":1608691995810,"results":"35","hashOfConfig":"25"},{"size":608,"mtime":1608595444115,"results":"36","hashOfConfig":"25"},{"size":1070,"mtime":1608596672070,"results":"37","hashOfConfig":"25"},{"size":305,"mtime":1608850334508,"results":"38","hashOfConfig":"25"},{"size":1797,"mtime":1608601380164,"results":"39","hashOfConfig":"25"},{"size":2950,"mtime":1608647979846,"results":"40","hashOfConfig":"25"},{"size":702,"mtime":1608691995810,"results":"41","hashOfConfig":"25"},{"size":2879,"mtime":1608806348486,"results":"42","hashOfConfig":"25"},{"size":967,"mtime":1608691995751,"results":"43","hashOfConfig":"25"},{"size":1287,"mtime":1608806987885,"results":"44","hashOfConfig":"25"},{"size":2686,"mtime":1608806629290,"results":"45","hashOfConfig":"25"},{"size":1791,"mtime":1608807084471,"results":"46","hashOfConfig":"25"},{"size":374,"mtime":1608848798287,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"4kbgns",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\index.tsx",[],["103","104"],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\apollo.ts",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\routers\\logged-out-router.tsx",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\routers\\logged-in-router.tsx",["105"],"import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport { Category } from \"../pages/client/category\";\r\nimport { Header } from \"../components/header\";\r\nimport { useMe } from \"../hooks/useMe\";\r\nimport { NotFound } from \"../pages/404\";\r\nimport { Restaurants } from \"../pages/client/restaurants\";\r\nimport { Search } from \"../pages/client/search\";\r\nimport { ConfirmEmail } from \"../pages/user/confirm-email\";\r\nimport { EditProfile } from \"../pages/user/edit-profile\";\r\nimport { UserRole } from \"../__generated__/globalTypes\";\r\nimport { Restaurant } from \"../pages/client/restaurant\";\r\n\r\nconst ClientRoutes = [\r\n  <Route path=\"/\" exact key={1}>\r\n    <Restaurants />\r\n  </Route>,\r\n  <Route path=\"/confirm\" exact key={2}>\r\n    <ConfirmEmail />\r\n  </Route>,\r\n  <Route path=\"/edit-profile\" exact key={3}>\r\n    <EditProfile />\r\n  </Route>,\r\n  <Route path=\"/search\" key={4}>\r\n    <Search />\r\n  </Route>,\r\n  <Route path=\"/category/:slug\" key={5}>\r\n    <Category />\r\n  </Route>,\r\n  <Route path=\"/restaurants/:id\" key={6}>\r\n    <Restaurant />\r\n  </Route>,\r\n];\r\n\r\nexport const LoggedInRouter = () => {\r\n  const { data, loading, error } = useMe();\r\n\r\n  if (!data || loading || error) {\r\n    return (\r\n      <div className=\"h-screen flex justify-center items-center\">\r\n        <span className=\"font-medium text-xl tracking-wide\">Loading...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  console.log(data);\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Switch>\r\n        {data.me.role === UserRole.Client && ClientRoutes}\r\n        <Route>\r\n          <NotFound />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\login.tsx",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\create-account.tsx",["106","107"],"import { ApolloError, gql, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport deliveryAppLogo from \"../images/logo.svg\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../components/button\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { CreateAccountInput, UserRole } from \"../__generated__/globalTypes\";\r\nimport {\r\n  CreateAccountMutation,\r\n  CreateAccountMutationVariables,\r\n} from \"../__generated__/CreateAccountMutation\";\r\n\r\ninterface ICreateAccountForm {\r\n  email: string;\r\n  password: string;\r\n  role: UserRole;\r\n}\r\n\r\nexport const CREATE_ACCOUNT_MUTATION = gql`\r\n  mutation CreateAccountMutation($createAccountInput: CreateAccountInput!) {\r\n    createAccount(input: $createAccountInput) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CreateAccount = () => {\r\n  const history = useHistory();\r\n  const {\r\n    register,\r\n    getValues,\r\n    errors,\r\n    handleSubmit,\r\n    formState,\r\n  } = useForm<ICreateAccountForm>({\r\n    mode: \"onChange\",\r\n    defaultValues: { role: UserRole.Client },\r\n  });\r\n\r\n  const onError = (error: ApolloError) => {};\r\n\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password, role } = getValues();\r\n      if (email && password) {\r\n        createAccountMutation({\r\n          variables: { createAccountInput: { email, password, role } },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onCompleted = (data: CreateAccountMutation) => {\r\n    const {\r\n      createAccount: { ok, error },\r\n    } = data;\r\n    if (ok) {\r\n      alert(\"Account created login now\");\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  const [\r\n    createAccountMutation,\r\n    { loading, data: createAccountMutationResult },\r\n  ] = useMutation<CreateAccountMutation, CreateAccountMutationVariables>(\r\n    CREATE_ACCOUNT_MUTATION,\r\n    { onError, onCompleted }\r\n  );\r\n\r\n  return (\r\n    <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\r\n      <Helmet>\r\n        <title>Create Account | Delivery app</title>\r\n      </Helmet>\r\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\r\n        <img src={deliveryAppLogo} className=\"w-52 mb-10\" alt=\"Delivery app\" />\r\n        <h4 className=\"w-full font-medium text-left text-3xl mb-5\">\r\n          Lets's get started\r\n        </h4>\r\n        <form\r\n          className=\"grid gap-3 mt-5 w-full mb-5\"\r\n          onSubmit={handleSubmit(onSubmit)}\r\n        >\r\n          <input\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            name=\"email\"\r\n            required\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"input\"\r\n          />\r\n\r\n          {errors.email?.type === \"pattern\" && (\r\n            <FormError errorMessage={\"Please enter a valid email\"} />\r\n          )}\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email?.message} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"Password is required\" })}\r\n            required\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && (\r\n            <span className=\"font-medium text-red-500\">\r\n              <FormError errorMessage={errors.password?.message} />\r\n            </span>\r\n          )}\r\n          <select\r\n            name=\"role\"\r\n            ref={register({ required: true })}\r\n            className=\"input\"\r\n          >\r\n            {Object.keys(UserRole).map((role, index) => (\r\n              <option key={index}>{role}</option>\r\n            ))}\r\n          </select>\r\n          <Button\r\n            canClick={formState.isValid}\r\n            loading={loading}\r\n            actionText={\"Create Account\"}\r\n          />\r\n          {createAccountMutationResult?.createAccount.error && (\r\n            <FormError\r\n              errorMessage={createAccountMutationResult?.createAccount.error}\r\n            />\r\n          )}\r\n        </form>\r\n        <div>\r\n          Already have an account?{\" \"}\r\n          <Link to=\"/\" className=\"text-lime-600 hover:underline\">\r\n            Login now\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\components\\form-error.tsx",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\components\\button.tsx",["108"],"import React from \"react\";\r\n\r\ninterface IButtonProps {\r\n  canClick: boolean;\r\n  loading: boolean;\r\n  actionText: string;\r\n}\r\n\r\nexport const Button: React.FC<IButtonProps> = ({\r\n  canClick,\r\n  loading,\r\n  actionText,\r\n}) => (\r\n  <button\r\n    role=\"button\"\r\n    className={`text-lg font-medium focus:outline-none text-white py-4  transition-colors ${\r\n      canClick\r\n        ? \"bg-lime-600 hover:bg-lime-700\"\r\n        : \"bg-gray-300 pointer-events-none\"\r\n    }`}\r\n  >\r\n    {loading ? \"Loading...\" : actionText}\r\n  </button>\r\n);\r\n","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\constants.ts",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\client\\restaurants.tsx",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\404.tsx",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\components\\header.tsx",["109","110"],"import { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMe } from \"../hooks/useMe\";\r\nimport nuberLogo from \"../images/logo.svg\";\r\n\r\nexport const Header: React.FC = () => {\r\n  const { data, loading, error } = useMe();\r\n\r\n  return (\r\n    <>\r\n      {!data?.me.verified && (\r\n        <div className=\"bg-red-500 p-3 text-center text-base text-white\">\r\n          <span>Please verify your email.</span>\r\n        </div>\r\n      )}\r\n      <header className=\"py-4\">\r\n        <div className=\"w-full px-5 xl:px-0 max-w-screen-2xl mx-auto flex justify-between items-center\">\r\n          <Link to=\"/\">\r\n            <img src={nuberLogo} className=\"w-44\" alt=\"Nuber Eats\" />\r\n          </Link>\r\n          <span className=\"text-xs\">\r\n            <Link to=\"/edit-profile\">\r\n              <FontAwesomeIcon icon={faUser} className=\"text-3xl\" />\r\n            </Link>\r\n          </span>\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\hooks\\useMe.tsx",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\user\\confirm-email.tsx",["111","112","113","114"],"import { useApolloClient, useMutation } from \"@apollo/client\";\r\nimport { gql } from \"@apollo/client/core\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { useMe } from \"../../hooks/useMe\";\r\nimport { VerifyEmailInput } from \"../../__generated__/globalTypes\";\r\nimport {\r\n  verifyEmail,\r\n  verifyEmailVariables,\r\n} from \"../../__generated__/verifyEmail\";\r\n\r\nconst VERIFY_EMAIL_MUTATION = gql`\r\n  mutation verifyEmail($input: VerifyEmailInput!) {\r\n    verifyEmail(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\nexport const ConfirmEmail = () => {\r\n  const { data: userData } = useMe();\r\n\r\n  const onCompleted = (data: verifyEmail) => {\r\n    const {\r\n      verifyEmail: { ok },\r\n    } = data;\r\n    if (ok && userData?.me.id) {\r\n      client.writeFragment({\r\n        id: `User:${userData.me.id + \"\"}`,\r\n        fragment: gql`\r\n          fragment VerifiedUser on User {\r\n            verified\r\n          }\r\n        `,\r\n        data: { verified: true },\r\n      });\r\n    }\r\n  };\r\n\r\n  const [verifyEmail] = useMutation<verifyEmail, verifyEmailVariables>(\r\n    VERIFY_EMAIL_MUTATION,\r\n    { onCompleted }\r\n  );\r\n\r\n  const client = useApolloClient();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const [, code] = window.location.href.split(\"code=\");\r\n    verifyEmail({ variables: { input: { code } } });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mt-52 flex flex-col items-center justify-center\">\r\n      <Helmet>\r\n        <title>Verify Email | Nuber Eats</title>\r\n      </Helmet>\r\n      <h2 className=\"text-lg mb-1 font-medium\">Confirming email...</h2>\r\n      <h4 className=\"text-gray-700 text-sm\">\r\n        Please wait, don't close this page...\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\user\\edit-profile.tsx",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\components\\restaurant.tsx",[],["115","116"],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\client\\search.tsx",["117","118","119"],"import { gql, useLazyQuery } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { Restaurant } from \"../../components/restaurant\";\r\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport {\r\n  searchRestaurant,\r\n  searchRestaurantVariables,\r\n} from \"../../__generated__/searchRestaurant\";\r\n\r\nconst SEARCH_RESTAURANT = gql`\r\n  query searchRestaurant($input: SearchRestaurantInput!) {\r\n    searchRestaurant(input: $input) {\r\n      ok\r\n      error\r\n      totalPages\r\n      totalResults\r\n      restaurants {\r\n        ...RestaurantParts\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n`;\r\n\r\nexport const Search = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [page, setPage] = React.useState(1);\r\n  const [callQuery, { loading, data, called }] = useLazyQuery<\r\n    searchRestaurant,\r\n    searchRestaurantVariables\r\n  >(SEARCH_RESTAURANT);\r\n\r\n  React.useEffect(() => {\r\n    const [_, query] = location.search.split(\"?term=\");\r\n    if (!query) {\r\n      return history.replace(\"/\");\r\n    }\r\n    callQuery({\r\n      variables: {\r\n        input: {\r\n          page,\r\n          query,\r\n        },\r\n      },\r\n    });\r\n  }, [page]);\r\n\r\n  const onNextPageClick = () => setPage((current) => current + 1);\r\n  const onPrevPageClick = () => setPage((current) => current - 1);\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Search | Delivery app</title>\r\n      </Helmet>\r\n      {!loading && data?.searchRestaurant.restaurants && (\r\n        <div className=\"max-w-screen-2xl pb-20 mx-auto mt-8\">\r\n          <div className=\"grid mt-16 md:grid-cols-3 gap-x-5 gap-y-10\">\r\n            {data?.searchRestaurant?.restaurants?.map((restaurant) => (\r\n              <Restaurant\r\n                key={restaurant.id}\r\n                id={restaurant.id + \"\"}\r\n                coverImage={restaurant.coverImage}\r\n                name={restaurant.name}\r\n                categoryName={restaurant.category?.name}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"grid grid-cols-3 text-center max-w-md items-center mx-auto mt-10\">\r\n        {page > 1 ? (\r\n          <button\r\n            onClick={onPrevPageClick}\r\n            className=\"focus:outline-none font-medium text-2xl\"\r\n          >\r\n            &larr;\r\n          </button>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        <span>\r\n          Page {page} of {data?.searchRestaurant.totalPages}\r\n        </span>\r\n        {page !== data?.searchRestaurant.totalPages ? (\r\n          <button\r\n            onClick={onNextPageClick}\r\n            className=\"focus:outline-none font-medium text-2xl\"\r\n          >\r\n            &rarr;\r\n          </button>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\fragments.ts",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\__generated__\\globalTypes.ts",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\client\\category.tsx",[],"C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\pages\\client\\restaurant.tsx",["120","121"],"import { gql, useQuery } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { DISH_FRAGMENT, RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport {\r\n  restaurant,\r\n  restaurantVariables,\r\n} from \"../../__generated__/restaurant\";\r\n\r\nconst RESTAURANT_QUERY = gql`\r\n  query restaurant($input: RestaurantInput!) {\r\n    restaurant(input: $input) {\r\n      ok\r\n      error\r\n      restaurant {\r\n        ...RestaurantParts\r\n        menu {\r\n          ...DishParts\r\n        }\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n  ${DISH_FRAGMENT}\r\n`;\r\n\r\ninterface IRestaurantParams {\r\n  id: string;\r\n}\r\n\r\nexport const Restaurant = () => {\r\n  const history = useHistory();\r\n  const params = useParams<IRestaurantParams>();\r\n  const { loading, data } = useQuery<restaurant, restaurantVariables>(\r\n    RESTAURANT_QUERY,\r\n    {\r\n      variables: {\r\n        input: {\r\n          restaurantId: +params.id,\r\n        },\r\n      },\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>{data?.restaurant.restaurant?.name || \"\"} | Nuber Eats</title>\r\n      </Helmet>\r\n      <div\r\n        className=\" bg-gray-800 bg-center bg-cover py-48\"\r\n        style={{\r\n          backgroundImage: `url(${data?.restaurant.restaurant?.coverImage})`,\r\n        }}\r\n      >\r\n        <div className=\"bg-white xl:w-3/12 py-8 pl-48\">\r\n          <h4 className=\"text-4xl mb-3\">{data?.restaurant.restaurant?.name}</h4>\r\n          <h5 className=\"text-sm font-light mb-2\">\r\n            {data?.restaurant.restaurant?.category?.name}\r\n          </h5>\r\n          <h6 className=\"text-sm font-light\">\r\n            {data?.restaurant.restaurant?.address}\r\n          </h6>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\rivol\\Desktop\\Sites\\Apps\\uber-eats\\uber-eats-frontend\\src\\components\\app.tsx",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":4,"column":3,"nodeType":"128","messageId":"129","endLine":4,"endColumn":11},{"ruleId":"126","severity":1,"message":"130","line":9,"column":10,"nodeType":"128","messageId":"129","endLine":9,"endColumn":28},{"ruleId":"126","severity":1,"message":"131","line":58,"column":28,"nodeType":"128","messageId":"129","endLine":58,"endColumn":33},{"ruleId":"132","severity":1,"message":"133","line":14,"column":3,"nodeType":"134","endLine":21,"endColumn":4},{"ruleId":"126","severity":1,"message":"135","line":9,"column":17,"nodeType":"128","messageId":"129","endLine":9,"endColumn":24},{"ruleId":"126","severity":1,"message":"131","line":9,"column":26,"nodeType":"128","messageId":"129","endLine":9,"endColumn":31},{"ruleId":"126","severity":1,"message":"136","line":5,"column":22,"nodeType":"128","messageId":"129","endLine":5,"endColumn":33},{"ruleId":"126","severity":1,"message":"137","line":7,"column":10,"nodeType":"128","messageId":"129","endLine":7,"endColumn":26},{"ruleId":"126","severity":1,"message":"138","line":47,"column":9,"nodeType":"128","messageId":"129","endLine":47,"endColumn":16},{"ruleId":"139","severity":1,"message":"140","line":52,"column":6,"nodeType":"141","endLine":52,"endColumn":8,"suggestions":"142"},{"ruleId":"122","replacedBy":"143"},{"ruleId":"124","replacedBy":"144"},{"ruleId":"126","severity":1,"message":"145","line":31,"column":38,"nodeType":"128","messageId":"129","endLine":31,"endColumn":44},{"ruleId":"126","severity":1,"message":"146","line":37,"column":12,"nodeType":"128","messageId":"129","endLine":37,"endColumn":13},{"ruleId":"139","severity":1,"message":"147","line":49,"column":6,"nodeType":"141","endLine":49,"endColumn":12,"suggestions":"148"},{"ruleId":"126","severity":1,"message":"138","line":33,"column":9,"nodeType":"128","messageId":"129","endLine":33,"endColumn":16},{"ruleId":"126","severity":1,"message":"135","line":35,"column":11,"nodeType":"128","messageId":"129","endLine":35,"endColumn":18},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'CreateAccountInput' is defined but never used.","'error' is assigned a value but never used.","jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","'loading' is assigned a value but never used.","'useLocation' is defined but never used.","'VerifyEmailInput' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'verifyEmail'. Either include it or remove the dependency array.","ArrayExpression",["151"],["149"],["150"],"'called' is assigned a value but never used.","'_' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'callQuery', 'history', and 'location.search'. Either include them or remove the dependency array.",["152"],"no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [verifyEmail]",{"range":"157","text":"158"},"Update the dependencies array to be: [callQuery, history, location.search, page]",{"range":"159","text":"160"},[1422,1424],"[verifyEmail]",[1270,1276],"[callQuery, history, location.search, page]"]